/// String gitCredentials = "github-passwd"
// String repoUrl = "https://github.com/myroslavlevchyk/final.git"

pipeline {
    agent {
        node {
            label 'slave1'
        }
    }

//     environment {
//         PATH = "$PATH:/home/myroslav/final_task/final"        
//    }    

    parameters {
        choice(choices: '\n\nDeploy environment\nUpdate environment\nDelete environment', description: 'Please select a Service', name: 'choiceServise')
        imageTag(name: 'petclinic', description: 'Please select a DOCKER IMAGE (default = latest)', image: 'myroslavlevchyk/petclinic', defaultTag: 'latest')    
    }

    stages {
        // stage('Delete workspace before build starts') {
        //     steps {
        //         echo 'Deleting workspace'
        //         deleteDir()
        //     }
        // }

        // stage('Checkout') {
        //         steps {
        //         checkout([$class: 'GitSCM', 
        //             branches: [[name: '*/main']],
        //             extensions: [
        //                 [$class: 'SparseCheckoutPaths', 
        //                 sparseCheckoutPaths:[[$class:'SparseCheckoutPath', path:'/home/myroslav/final_task/final']]]
        //                 ],
        //             userRemoteConfigs: [[url: 'https://github.com/myroslavlevchyk/final.git']]])
        //         sh "pwd" 
        //         sh "ls -ltr"
        //     }
        // }

        // stage('Env PWD') {
        //     steps {
        //         sh 'pwd'
        //         sh 'ls -la'
        //         echo "PATH=$PATH" 
        //     }
        // }


        stage('Env FINAL') {
            steps {
                sh 'cd /home/myroslav/final_task/final'
                echo "choiceServise: ${params.choiceServise}"                
                echo "petclinic: ${params.petclinic}"                
            }
        }


        // stage('VM1: <Ansiblefile#2>'){
        //     steps{
        //         // sh 'cd /home/myroslav/final_task/final'
        //         // sh 'pwd'
        //         // sh 'cd /home/myroslav/final_task/final && ansible-playbook playbook3.yml --extra-vars "DOCKER_IMAGE=${params.petclinic}"'
        //         // // pwd
        //         // ansible-playbook playbook3.yml --extra-vars "DOCKER_IMAGE=params.petclinic"
        //         // echo "PRINT Ansible#2>>>"                  
        //         sh '''                 
        //         cd /home/myroslav/final_task/final/
        //         pwd
        //         ansible-playbook playbook3.yml 
        //         pwd
        //         echo "PRINT Ansible#2>>>"
        //         '''             
        //     }
        // }

        stage('Env FINAL2') {
            steps {
                sh 'cd /home/myroslav/final_task/final'
                echo "choiceServise: ${params.choiceServise}"                
                echo "petclinic: ${params.petclinic}"                
            }
        }


        stage('Change') {
            steps {
                script {
                    if (params.choiceServise == 'Deploy environment') 
                        {
                        sh '''                 
                        cd /home/myroslav/final_task/final/
                        pwd
                        ansible-playbook playbook2.yml 
                        pwd
                        echo "PRINT Ansible#2>>> DEPLOY"
                        '''   
                        }
                    if (params.choiceServise == 'Update environment') 
                        {
                        sh '''                 
                        cd /home/myroslav/final_task/final/ && kubectl apply -f /home/myroslav/final_task/final/pod-my-cl-1.yaml
                        pwd
                        cd
                        pwd
                        kubectl apply -f /home/myroslav/final_task/final/pod-my-cl-1.yaml                             
                        pwd
                        echo "PRINT Ansible#3>>> UPDATE"
                        ''' 
                        }
                    if (params.choiceServise == 'Delete environment') 
                        {
                        sh '''                 
                        cd /home/myroslav/final_task/final/
                        pwd
                        ansible-playbook playbook4.yml 
                        pwd
                        echo "PRINT Ansible#4>>> DELETE"
                        '''   
                        }
                    if (params.choiceServise == '')
                        {
                        echo 'Hello from Nothing'
                        }
                    }
                    // else {
                    //     echo 'Hello from Nothing'
                    //     }
                    // }
                    // if (params.choiceServise == 'Deploy environment') 
                    //     {
                    //     echo 'Hello from Deploy'
                    //     }
                    // if (params.choiceServise == 'Update environment') 
                    //     {
                    //     echo 'Hello from Update'
                    //     }
                    // if (params.choiceServise == 'Delete environment') 
                    //     {
                    //     echo 'Hello from Delete'
                    //     }
                    // if (params.choiceServise == '')
                    //     {
                    //     echo 'Hello from Nothing'
                    //     }
                    // }

                    // else {
                    //     echo 'Hello from Nothing'
                    //     }
                    // }
            }
        }

        // stage('Env print choiceExample') {
        //     steps {
        //         sh '''
        //             echo "choiceExample: ${params.choiceExample}"
        //         '''
        //     }
        // }

        // stage('Env print DOCKER image') {
        //     steps {
        //         sh '''
        //             echo $DOCKER_IMAGE
        //         '''
        //     }
        // }        

        // stage('Env print BRANCH2') {
        //     steps {
        //         sh '''
        //             echo "${params.BRANCH}"
        //         '''
        //     }
        // }

        // stage('Env print DOCKER image') {
        //     steps {
        //         sh '''
        //             echo "${params.DOCKER_IMAGE}"
        //         '''
        //     }
        // }

        // stage('Checkout') {
        //     steps{
        //             git branch: "${params.BRANCH}", credentialsId: 'ssh-github', url: 'git@github.com:myroslavlevchyk/4pet.git'      
        //         }
        // }            
   
    }
}
